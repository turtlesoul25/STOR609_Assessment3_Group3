---
title: "Reproducibility of Optimal Play for Pig(let)"
author: "Group 3: Vlad Bercovici, Malcolm Connolly, Rebekah Fearnhead, Niharika Peddinenikalva"
format: revealjs
incremental: true
theme: sky
---

# In the morning

## Getting up

-   Turn off alarm [^1]
-   Get out of bed

[^1]: Or 4-5

::: aside
:::

## Breakfast {.smaller}

-   Eat eggs
-   Drink coffee

# In the evening

## Some code example

```{python}
#| echo: true
#| code-line-numbers: "|6-7|8,9"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

# Figures

## Figure 2

```{=html}
<iframe src="Figures/PIGLET_convergence.png" width="100%" height="600px" style="border:none;"></iframe>
```

## Figure 3

```{=html}
<iframe src="Figures/Roll_boundary_PIG_target_100_d6.html" width="100%" height="600px" style="border:none;"></iframe>
```

## Figure 4

```{=html}
<iframe src="Figures/cross_sec_reachable_PIG_target_100_d6.png" width="100%" height="600px" style="border:none;"></iframe>
```

## Figure 5

```{=html}
<iframe src="Figures/Reachable_states_PIG_target_100_d6.html" width="100%" height="600px" style="border:none;"></iframe>
```

## Figure 6

```{=html}
<iframe src="Figures/Reachable_states_opt_roll_PIG_target_100_d6.html" width="100%" height="600px" style="border:none;"></iframe>
```

## Figure 7

```{=html}
<iframe src="Figures/contours_PIG_target_100_d6.html" width="100%" height="600px" style="border:none;"></iframe>
```

## Dinner

-   Eat spaghetti
-   Drink wine

## Going to sleep

::::: columns
::: {.column width="40%"}
-   Get in bed
:::

::: {.column width="60%"}
-   Count sheep
:::
:::::

## Quarto

Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```
